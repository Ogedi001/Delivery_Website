<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>


    <!-- Bootstrap CSS -->
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.0.0-beta1/css/bootstrap.min.css" />


    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css" />





    <script type='text/javascript'>
        let pickupMap;
        let dropoffMap;

        function GetMaps() {
            pickupMap = new Microsoft.Maps.Map('#pickupMap', {});
            dropoffMap = new Microsoft.Maps.Map('#dropoffMap', {});

            Microsoft.Maps.loadModule('Microsoft.Maps.AutoSuggest', function () {
                var options = {
                    countryFilter: 'NGA' // Specify the country code for Nigeria
                };

                var manager1 = new Microsoft.Maps.AutosuggestManager({ map: pickupMap, options: options });
                manager1.attachAutosuggest('#pickupSearchBox', '#pickupSearchBoxContainer', pickupSelectedSuggestion);

                var manager2 = new Microsoft.Maps.AutosuggestManager({ map: dropoffMap, options: options });
                manager2.attachAutosuggest('#dropoffSearchBox', '#dropoffSearchBoxContainer', dropOffSelectedSuggestion);
            });
        }


        function pickupSelectedSuggestion(result) {
            pickupMap.entities.clear();
            let pin = new Microsoft.Maps.Pushpin(result.location);
            pickupMap.entities.push(pin);
            pickupMap.setView({ bounds: result.bestView });
            document.getElementById('pickupSearchBox').value = result.formattedSuggestion;
            document.getElementById('pickupSearchBoxValue').value = result.formattedSuggestion;

        }
        function dropOffSelectedSuggestion(result) {
            dropoffMap.entities.clear();
            let pin = new Microsoft.Maps.Pushpin(result.location);
            dropoffMap.entities.push(pin);
            dropoffMap.setView({ bounds: result.bestView });

            document.getElementById('dropoffSearchBox').value = result.formattedSuggestion;
            document.getElementById('dropoffSearchBoxValue').value = result.formattedSuggestion;
        }

    </script>

    <script type='text/javascript' src='http://www.bing.com/api/maps/mapcontrol?callback=GetMaps&key=<%= bingMapsKey %>'
        async defer></script>

    <style>
        th,
        td {
            border-right: 1px solid black;
            padding: 5px;
        }

        th:last-child,
        td:last-child {
            border-right: none;
        }


        #modal {

            background: linear-gradient(rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5)), rgba(255, 255, 255, 0.5);


        }
    </style>
</head>

<body>
    <!-- Orders Page -->


    <div class="order-history">
        <div style="display: none; " class="hiddenDiv">
            <div id="modal" class="modal d-flex align-items-center justify-content-center" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-body">
                            <h1 class="text-center"><i class="fas fa-spinner fa-spin"></i> Please wait....</h1>

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <h1>Order History</h1>
        <table>
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th> Date</th>
                    <th>Item ordered</th>
                    <th>Total Amount</th>
                    <th>Order Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <% const lastSixOrders=orders.slice(-5).reverse(); %>
                    <% lastSixOrders.forEach(function(order) { %>
                        <tr>
                            <td>
                                <%= order.orderNumber %>
                            </td>
                            <td>
                                <%= order.orderDate %>
                            </td>
                            <td>
                                <%= order.itemType%>
                            </td>
                            <td>
                                <%= order.OrderAmount %>
                            </td>
                            <td>
                                <%= order.orderStatus %>
                            </td>
                            <td>
                                <a href="/customer/order?id=<%= order._id %>" class="btn btn-primary">
                                    <i class="fa fa-arrow-circle-right" aria-hidden="true"></i> View Details
                                </a>
                            </td>

                        </tr>
                        <% }); %>

            </tbody>
        </table>
        <div>
            <a href="/customer/orders-all" class="btn btn-primary">
                <i class="fas fa-archive"></i> View all order history
            </a>
        </div>

    </div>


    <div class="new-order">
        <h1>New Order</h1>
        <h4 id="errorContainer">
            <%= validError %>
        </h4>
        <form id="orderForm" action="/orders" method="POST">
            <div style="display: inline-flex;">
                <div id='pickupSearchBoxContainer'>
                    <label for="pickup-location">Pickup Location:</label>
                    <input type="text" id="pickupSearchBox" name="pickupLocation" required autocomplete="off">
                    <input type="hidden" id="pickupSearchBoxValue" name="pickupSearchBox">
                </div>

                <div id="pickupMap" style="position:relative;width:400px;height:300px;"></div>

                <div id='dropoffSearchBoxContainer'>
                    <label for="dropoff-location">Dropoff Location:</label>
                    <input type="text" id="dropoffSearchBox" name="dropoffLocation" required autocomplete="off">
                    <input type="hidden" id="dropoffSearchBoxValue" name="dropoffSearchBox">
                </div>


                <div id="dropoffMap" style="position:relative;width:400px;height:300px"></div>
            </div>

            <select id="itemType" name="itemType">
                <option value="" disabled selected>Select item type</option>
                <option value="Groceries">Groceries</option>
                <option value="Accessories">Accessories</option>
                <option value="Books">Books</option>
                <option value="Clothes">Clothes</option>
                <option value="Electronics">Electronics</option>
                <option value="Furniture">Furniture</option>
                <option value="other">Other</option>
            </select>

            <label for="delivery-option">Delivery Option:</label>
            <select id="delivery-option" name="deliveryOption">
                <option value="Standard">Standard (3-5 days)</option>
                <option value="Express">Express (1-2 days)</option>
            </select>

            <label for="payment-option">Payment Option:</label>
            <select id="payment-option" name="paymentOption">
                <option value="Credit/Debit Card">Credit/Debit Card</option>
                <option value="PayPal">PayPal</option>
            </select>

            <!-- Button trigger modal -->
            <button type="submit" class="btn btn-primary">
                Place Order
            </button>


            <!-- Modal -->
            <!-- Modal -->
            <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
                aria-labelledby="staticBackdropLabel" aria-hidden="true" data-bs-backdrop="false">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="staticBackdropLabel"></h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
                                id="closeModalButton"></button>
                        </div>
                        <div class="modal-body">
                            <h4>OrderID:</h4>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                                id="closeModalButton">Close</button>
                            <button type="button" class="btn btn-primary" id="orderRiderButton">Order Rider Now</button>
                        </div>
                    </div>
                </div>
            </div>

        </form>
    </div>
    <!-- Bootstrap JavaScript -->
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.0.0-beta1/js/bootstrap.bundle.min.js"></script>



    <script>

        // Get the form element
        const orderForm = document.getElementById('orderForm');

        // document.querySelector('#btn').addEventListener('click', () => {
        //    
        // })


        // Add an event listener for the form submission
        orderForm.addEventListener('submit', async (event) => {
            event.preventDefault(); // Prevent the default form submission behavior
            const hiddenDiv = document.querySelector('.hiddenDiv')
            hiddenDiv.style.display = 'block';
            setTimeout(() => {
                hiddenDiv.style.display = 'none';
            }, 3000); // 5 seconds (5000 milliseconds)

            try {
                const response = await fetch('/orders', {
                    method: 'POST',
                    body: new URLSearchParams(new FormData(orderForm)),
                });

                if (response.ok) {
                    // Order placed successfully
                    const data = await response.json();
                    const order = data.populatedOrder
                    // Update the modal content with the order data
                    const orderModalTitle = document.getElementById('staticBackdropLabel');
                    const orderModalBody = document.querySelector('.modal-body h4');
                    const orderRiderButton = document.querySelector('.modal-footer .btn-primary');



                    orderModalTitle.textContent = 'Order placed successfully';
                    orderModalBody.innerHTML =
                        `Order ID: ${order.orderNumber}<br>` +
                        `Type of Item: ${order.itemType}<br>` +
                        `Order Date: ${order.orderDate}<br>` +
                        `Distance: ${order.OrderDuration.distance_km} km<br>` +
                        `Order Amount: ${order.OrderAmount}`;



                    // Display the modal
                    var myModalEl = document.getElementById('staticBackdrop');
                    var modal = new bootstrap.Modal(myModalEl, {
                        backdrop: 'static',
                        keyboard: false
                    });

                    modal.show();
                } else {
                    // Handle the error case
                    const errorData = await response.json();

                    if (errorData.itemTypeError) {
                        const itemTypeError = errorData.itemTypeError;
                        errorTimeOut(itemTypeError)
                        return console.error(itemTypeError);
                    } else if (errorData.validError) {
                        const validError = errorData.validError
                        errorTimeOut(validError)
                        return console.log(validError)
                    }

                    console.log(errorData)
                }
            } catch (error) {
                console.error(error);
            }
        });

        const closeModalButtons = document.querySelectorAll('#closeModalButton');
        closeModalButtons.forEach((button) => {
            button.addEventListener('click', () => {
                // Redirect to another page
                window.location.href = '/customer/orders';
            });
        });

        function errorTimeOut(errMsg) {
            const errorContainer = document.getElementById('errorContainer');
            errorContainer.textContent = errMsg;
            setTimeout(() => {
                errorContainer.textContent = " "
            }, 3000);
        }

    </script>

</body>

</html>